#BlueJ class context
comment0.params=inX\ inY\ radiusIn\ frameW\ id
comment0.target=Bubble(double,\ double,\ double,\ double,\ int)
comment0.text=\n\ Default\ constructor\ for\ objects\ of\ class\ Bubble\n
comment1.params=
comment1.target=java.awt.Color\ randomColor()
comment1.text=\n\ returns\ a\ random\ color\ between\ 5\ potential\ options\n\n\ @return\ \ \ \ a\ random\ Color\ object\n
comment10.params=
comment10.target=java.awt.Color\ getColor()
comment10.text=\n\ returns\ this\ Bubble\ object's\ color\n\ \n\ @return\ \ \ \ this\ bubble's\ color\n
comment11.params=
comment11.target=int\ getID()
comment11.text=\n\ returns\ this\ bubble's\ ID\ number\ \n\n\ @return\ \ \ \ an\ integer\ object\ determining\ this\ Bubble's\ unique\ ID\n
comment12.params=
comment12.target=void\ kill()
comment12.text=\n\ sets\ alive\ to\ false\n\n\ @post\ \ \ \ alive\ will\ be\ false\n
comment2.params=g2\ bubs
comment2.target=void\ draw(java.awt.Graphics2D,\ Bubble[])
comment2.text=\n\ draws\ the\ bubble\n\n\ @post\ \ \ \ the\ bubble\ will\ be\ drawn\n\ @param\ \ \ \ g2\ \ a\ Graphics2D\ object\ which\ is\ used\ to\ draw\ the\ bubble\n
comment3.params=inX\ inY
comment3.target=void\ moveTo(double,\ double)
comment3.text=\n\ moves\ the\ bubble\ to\ the\ inputed\ X\ and\ Y\ coordinates\ (offsets\ slightly\ so\ that\ it\ is\ drawn\ correctly)\n\n\ @post\ \ \ \ the\ bubble\ will\ be\ moved\ to\ the\ appropriate\ location\n\ @param\ \ \ \ inX\ \ the\ X\ coordinate\ to\ move\ to\n\ \ \ \ \ \ \ \ \ \ \ inY\ \ the\ Y\ coordinate\ to\ move\ to\n
comment4.params=bubbles\ skip
comment4.target=boolean\ collided(Bubble[],\ int)
comment4.text=\n\ determines\ whether\ this\ bubble\ has\ collided\ with\ any\ other\ bubbles\ or\ the\ border\ of\ the\ frame\n\n\ @param\ \ \ \ bubbles\ \ \ an\ array\ of\ bubbles\ to\ sort\ through\ to\ detect\ collision\ with\ any\ of\ them\n\ \ \ \ \ \ \ \ \ \ \ skip\ \ a\ value\ at\ which\ to\ stop\ sorting,\ because\ this\ Bubble\ has\ reached\ itself\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (this\ Bubble's\ index\ in\ bubbles)\n\ @return\ \ \ \ a\ boolean\ value\ that\ says\ whether\ the\ bubble\ has\ collided\ with\ any\ bubbles\ or\ border\n
comment5.params=bubbles\ found
comment5.target=void\ findConnected(Bubble[],\ boolean)
comment5.text=\n\ determines\ whether\ the\ bubble\ is\ connected\ with\ any\ other\ bubbles\ in\ order\ to\ form\ a\ chain\ \n\n\ @post\ \ \ \ if\ a\ connected\ bubble\ is\ found,\ calls\ kill()\n\ @param\ \ \ \ bubbles\ \ an\ array\ of\ bubbles\ to\ sort\ through\ and\ find\ connected\ ones\n\ \ \ \ \ \ \ \ \ \ \ found\ \ a\ boolean\ value\ of\ whether\ or\ not\ a\ chain\ of\ bubbles\ has\ been\ formed\n
comment6.params=
comment6.target=boolean\ isDead()
comment6.text=\n\ returns\ whether\ or\ not\ the\ bubble\ is\ dead\n\n\ @return\ \ \ \ true\ if\ the\ bubble\ is\ dead,\ false\ if\ it's\ still\ alive\n
comment7.params=
comment7.target=void\ connected()
comment7.text=\n\ sets\ connected\ to\ true\ in\ order\ to\ find\ a\ chain\ of\ connected\ bubbles\n\ \ @post\ \ connected\ will\ be\ set\ to\ true\n
comment8.params=
comment8.target=double\ getX()
comment8.text=\n\ returns\ the\ X\ coordinate\ of\ the\ bubble\n\n\ @return\ \ \ \ the\ X\ coordinate\ of\ this\ Bubble\ object\n
comment9.params=
comment9.target=double\ getY()
comment9.text=\n\ returns\ the\ Y\ coordinate\ of\ the\ bubble\n\n\ @return\ \ \ \ the\ Y\ coordinate\ of\ this\ Bubble\ object\n
numComments=13
